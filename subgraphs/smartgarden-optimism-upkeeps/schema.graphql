# type ConfigSet @entity(immutable: true) {
#   id: Bytes!
#   config_paymentPremiumPPB: BigInt! # uint32
#   config_flatFeeMicroLink: BigInt! # uint32
#   config_blockCountPerTurn: Int! # uint24
#   config_checkGasLimit: BigInt! # uint32
#   config_stalenessSeconds: Int! # uint24
#   config_gasCeilingMultiplier: Int! # uint16
#   config_minUpkeepSpend: BigInt! # uint96
#   config_maxPerformGas: BigInt! # uint32
#   config_fallbackGasPrice: BigInt! # uint256
#   config_fallbackLinkPrice: BigInt! # uint256
#   config_transcoder: Bytes! # address
#   config_registrar: Bytes! # address
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type FundsAdded @entity(immutable: true) {
#   id: Bytes!
#   KeeperRegistry1_3_id: BigInt! # uint256
#   from: Bytes! # address
#   amount: BigInt! # uint96
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type FundsWithdrawn @entity(immutable: true) {
#   id: Bytes!
#   KeeperRegistry1_3_id: BigInt! # uint256
#   amount: BigInt! # uint256
#   to: Bytes! # address
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type KeepersUpdated @entity(immutable: true) {
#   id: Bytes!
#   keepers: [Bytes!]! # address[]
#   payees: [Bytes!]! # address[]
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type OwnerFundsWithdrawn @entity(immutable: true) {
#   id: Bytes!
#   amount: BigInt! # uint96
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type OwnershipTransferRequested @entity(immutable: true) {
#   id: Bytes!
#   from: Bytes! # address
#   to: Bytes! # address
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type OwnershipTransferred @entity(immutable: true) {
#   id: Bytes!
#   from: Bytes! # address
#   to: Bytes! # address
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type Paused @entity(immutable: true) {
#   id: Bytes!
#   account: Bytes! # address
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type PayeeshipTransferRequested @entity(immutable: true) {
#   id: Bytes!
#   keeper: Bytes! # address
#   from: Bytes! # address
#   to: Bytes! # address
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type PayeeshipTransferred @entity(immutable: true) {
#   id: Bytes!
#   keeper: Bytes! # address
#   from: Bytes! # address
#   to: Bytes! # address
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type PaymentWithdrawn @entity(immutable: true) {
#   id: Bytes!
#   keeper: Bytes! # address
#   amount: BigInt! # uint256
#   to: Bytes! # address
#   payee: Bytes! # address
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type Unpaused @entity(immutable: true) {
#   id: Bytes!
#   account: Bytes! # address
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type UpkeepAdminTransferRequested @entity(immutable: true) {
#   id: Bytes!
#   KeeperRegistry1_3_id: BigInt! # uint256
#   from: Bytes! # address
#   to: Bytes! # address
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type UpkeepAdminTransferred @entity(immutable: true) {
#   id: Bytes!
#   KeeperRegistry1_3_id: BigInt! # uint256
#   from: Bytes! # address
#   to: Bytes! # address
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type UpkeepCanceled @entity(immutable: true) {
#   id: Bytes!
#   KeeperRegistry1_3_id: BigInt! # uint256
#   atBlockHeight: BigInt! # uint64
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type UpkeepCheckDataUpdated @entity(immutable: true) {
#   id: Bytes!
#   KeeperRegistry1_3_id: BigInt! # uint256
#   newCheckData: Bytes! # bytes
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type UpkeepGasLimitSet @entity(immutable: true) {
#   id: Bytes!
#   KeeperRegistry1_3_id: BigInt! # uint256
#   gasLimit: BigInt! # uint96
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type UpkeepMigrated @entity(immutable: true) {
#   id: Bytes!
#   KeeperRegistry1_3_id: BigInt! # uint256
#   remainingBalance: BigInt! # uint256
#   destination: Bytes! # address
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type UpkeepPaused @entity(immutable: true) {
#   id: Bytes!
#   KeeperRegistry1_3_id: BigInt! # uint256
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

type UpkeepPerformed @entity(immutable: true) {
  id: Bytes!
  KeeperRegistry1_3_id: BigInt! # uint256
  success: Boolean! # bool
  from: Bytes! # address
  payment: BigInt! # uint96
  performData: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Harvest @entity(immutable: true) {
  id: Bytes!
  hash: Bytes!
  block: BigInt!
  timestamp: BigInt!
  link_used: BigInt! # uint96
  cost: BigInt
  msig: Bytes! # address

  # gauge: Bytes! # address
  # token: Bytes! # address
  # amount: BigInt!
  # revenue: BigInt!
  # profit: BigInt!
}

# type UpkeepReceived @entity(immutable: true) {
#   id: Bytes!
#   KeeperRegistry1_3_id: BigInt! # uint256
#   startingBalance: BigInt! # uint256
#   importedFrom: Bytes! # address
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type UpkeepRegistered @entity(immutable: true) {
#   id: Bytes!
#   KeeperRegistry1_3_id: BigInt! # uint256
#   executeGas: BigInt! # uint32
#   admin: Bytes! # address
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }

# type UpkeepUnpaused @entity(immutable: true) {
#   id: Bytes!
#   KeeperRegistry1_3_id: BigInt! # uint256
#   blockNumber: BigInt!
#   blockTimestamp: BigInt!
#   transactionHash: Bytes!
# }
